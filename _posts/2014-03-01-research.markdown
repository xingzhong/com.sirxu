---
layout: post
title: Recursive Bayesian estimation based on stochastic context-free grammar
date:   2014-03-01 12:40:26
categories: MachineLearning 
---

## Time series analysis
Many machine learning and statistic problem can be generalized as an approach to estimate one or series unknown probability distributions based on some known facts.
In a typical time series scenario, the observed data have natural temporal order which the data will become available one by one through time.
In order to take advantage of such ordering, the ideal estimation should performed recursively following the time. 
The model as well as the embedded parameters will be updated incrementally through time. 
And most important applications include filtering, predication, and smoothing can be derived under this model.

Mathematically, unless the underlying time series is constant, people used to assume it as a **stochastic process**. Many statistic models are proposed to try better characterize the process. 
The most basic model only consider the level values. Typically such model assume the current sample have linear dependence with previous sample plus some white noise. 
Three broad classes of practical importance are the **autoregressive** (AR) models, the **integrated** (I) models, and the **moving average** (MA) models. 
Based on those models, there also have some combination models commonly used in practical applications include ARMA, ARIMA etc.

Beyond the linear relationship, there are models to represent the change of variance instead of values over time. 
For example, the volatility clustering in financial time series tend to have heavy dependency among volatility _"large changes tend to be followed by large changes, of either sign, and small changes tend to be followed by small changes"_.
In order to capture and quantify the additional variances correlation over time (heteroskedasticity), researchers propose more advanced **autoregressive conditional heteroskedasticity** (ARCH) model.

Inspired from heteroskedasticity model, instead of modeling the observations directly, the more advanced model starts to capture the indirect statistics. 
Such changing variance, though hidden from our observations, could also be modeled by some stochastic state process.
By allowing more hidden control variables as the system state, state space model can be used to generalized such assumptions. 
The most common state space model on practical usage is **hidden Markov model** which assume the unobserved (hidden) states is a Markov process.

## Recursive Bayesian estimation 
In most statistical models, the parameterized states to be modeled are  **posterior probability density functions** conditioned on observations.
Specifically in time series, our mission is seeking a solution to estimate such pdf in recursive manner. 
This optimal solution is typically intractable unless in linear assumption.
However, in most cases, it have optimal substructure over the time index. Therefore, it is possible to construct an efficient numerical solution through dynamical programming.

Once we go towards to state space model, we already assume their are two layers in the system. One is the observations `\( \mathbf{O} \)` which are input variables that we can directly observed from outside. And the other one is the hidden states `\( \mathbf{X} \)` which are assumed generate `\( \mathbf{O} \)` in the backyard.
Therefore, once we have `\( \mathbf{O} \)` in hand, we could based on that to infer who is the hidden state `\( \mathbf{X} \)` generate such `\( \mathbf{O} \)` probabilistically. 

Notice that both `\( \mathbf{O} \)` and `\( \mathbf{X} \)` are time indexed process with sort of dependency on series. 
So the inference of `\( X_i \)` is not only depend on `\( O_i \)`, but also depend on the past `\( X_{1:i-1} \)` and `\( O_{1:i-1} \)`.
Typically we assume the dependency between `\( X_i \)` and `\( O_{1:i-1} \)` are go through `\( X_{1:i-1} \)`.
Hence `\( \mathbf{X} \)` are conditional independent between each other.
Another assumption is `\( \mathbf{X} \)` have Markov property, which leads to
`\[
\mathbf{P}(X_k | X_{1:k-1}) = \mathbf{P}(X_k | X_{k-1})
\]`

In above model, our goal is to recursively estimate `\( \mathbf{X} \)` given `\( \mathbf{O} \)` with the time `\( t \)` from `\( 1 \)` to `\( n \)`.

So let's start from scratch. 
Initially, when `\( t = 0 \)`, we have no observations. Therefore, the only thing we could do is guess the next hidden state based on the prior knowledge
`\[
\mathbf{P}(X_1) = \pi
\]`
Then, `\( t \)` move on to `\( 1 \)`, we observe our first observation `\( O_1 \)`. The Bayesian posterior probability by adding this new information is,
`\[
\mathbf{P}(X_1 | O_1) = \frac{\mathbf{P}(O_1 | X_1) \mathbf{P}(X_1)}{ \sum_{x} \mathbf{P}(O_1|x)\mathbf{P} (x)}
\]`
following that, we are also curious a little bit more about the next state based on the newly updated observations. 
Because of Markov property, the probability of next state `\( X_2 \)` only depends on `\( X_1 \)`. 
`\[
\mathbf{P}(X_2 | O_1) = \sum_{x_1} \mathbf{P}(X_2 | x_1) \mathbf{P}(x_1 | O_1) 
\]`

We could follow above computation iteratively through time. 
Essentially, for each time step, there are two steps involve in the iteration,

* Prior Probability 
`\[ \mathbf{P} (X_{k+1} | O_{1:k}) = \sum_{x_k} \mathbf{P}(X_{k+1} | x_k) \mathbf{P}(x_k | O_{1:k}) \]`
* Posterior Probability
`\[ \mathbf{P} (X_{k+1} | O_{1:k+1}) = \frac{\mathbf{P}(O_{k+1} | X_{k+1}) \mathbf{P}(X_{k+1} | O_{1:k})}{ \sum_{x} \mathbf{P}(O_{k+1}|x)\mathbf{P} (x | O_{1:k})}\]`

Under different restrictions, the above estimation commonly have two filtering method, Kalman filter and Particle filter.

* Kalman filter.
	When the process `\( \mathbf{X} \)` is Gaussian linear process, by taking advantage of Gaussian property, both prior and posterior calculations have Gaussian close form.
* Particle filter
	When the process `\( \mathbf{X} \)` is not Gaussian linear process,
	the posterior probability no longer have close form to calculate.
	Monte Carlo simulation (Sequential importance re-sampling) will be used to estimate the distribution.

